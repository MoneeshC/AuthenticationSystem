@model QuizAttemptViewModel
@{
    ViewData["Title"] = "Quiz Page";
    Layout = ViewData["Layout"]?.ToString();
}

<div id="timer" class="alert alert-info">Time Left: <span id="timeLeft"></span>s</div>

<script>
    let timeLeft = @Model.TimeLimitSeconds;
    const timerDisplay = document.getElementById("timeLeft");
    timerDisplay.innerText = timeLeft;

    const timer = setInterval(() => {
        timeLeft--;
        if (timeLeft <= 0) {
            clearInterval(timer);
            timeLeft = 0;
            timerDisplay.innerText = timeLeft;
            document.querySelector("form").submit();
        } else {
            timerDisplay.innerText = timeLeft;
        }
    }, 1000);
</script>
<form asp-action="SubmitQuiz" method="post">
    <input type="hidden" name="QuizId" value="@Model.QuizId" />

    @for (int i = 0; i < Model.Questions.Count; i++)
    {
        var q = Model.Questions[i];
        <div class="mb-4">
            <h5>Q@(@i + 1): @q.Text</h5>
            @for (int j = 0; j < q.Options.Count; j++)
            {
                <div class="form-check">
                    <input type="radio" name="Answers[@i]" value="@j" class="form-check-input" id="q@i_o@j" />
                    <label for="q@i_o@j" class="form-check-label">@q.Options[j]</label>
                </div>
            }
        </div>
    }

    <button type="submit" class="btn btn-primary">Submit</button>
</form>