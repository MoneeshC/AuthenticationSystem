@model List<AuthWithMongo.Models.Quiz>

@{
    ViewData["Title"] = "Manage Quizzes";
    Layout = ViewData["Layout"]?.ToString();
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />

<div class="container mt-4">
    @if (TempData["QuizError"] != null)
    {
        <div class="alert alert-danger">
            @TempData["QuizError"]
        </div>
    }
    <h2 class="mb-4 d-flex justify-content-between align-items-center">
        Manage Quizzes
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addQuizModal">
            <i class="bi bi-plus-lg"></i> Add New Quiz
        </button>
    </h2>

    @if (!Model.Any())
    {
        <div class="alert alert-warning">No quizzes found. Start by creating your first one!</div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-3 g-4">
            @foreach (var quiz in Model)
            {
                <div class="col">
                    <div class="card shadow-sm h-100">
                        @if (!string.IsNullOrEmpty(quiz.ImageUrl))
                        {
                            <img src="@Url.Content(quiz.ImageUrl)" class="card-img-top"
                                 style="object-fit: cover; height: 200px;" alt="Quiz image" />
                        }
                        <div class="card-body">
                            <h5 class="card-title">@quiz.Title</h5>
                            <p class="text-muted small">⏱ @quiz.TimeLimitSeconds seconds</p>
                            <div class="d-flex gap-2 mt-2">
                                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#editQuizModal-@quiz.Id">
                                    Edit
                                </button>
                                <form asp-action="DeleteQuiz" asp-controller="Quiz" method="post" onsubmit="return confirm('Are you sure you want to delete this quiz?');">
                                    <input type="hidden" name="id" value="@quiz.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                @await Html.PartialAsync("_EditQuizModal", quiz)
            }
        </div>
    }
</div>

<!-- Add Quiz Modal -->
<div class="modal fade" id="addQuizModal" tabindex="-1" aria-labelledby="addQuizModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-scrollable">
        <div class="modal-content rounded-4 shadow-sm">
            <div class="modal-header">
                <h5 class="modal-title" id="addQuizModalLabel">Create New Quiz</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="CreateQuiz" asp-controller="Quiz" method="post" enctype="multipart/form-data">

            <div class="modal-body">
                <!-- Styled Inputs -->
                <div class="row g-3 mb-3">
                    <div class="col-md-8">
                            <input type="text" class="form-control" name="title" placeholder="Quiz Title" />
                    </div>
                    <div class="col-md-4">
                            <input type="number" class="form-control" name="timeLimit" placeholder="Time Limit (sec)" />
                    </div>
                </div>

                <!-- Image Upload -->
                <div class="mb-3">
                    <label class="form-label">Banner Image</label>
                    <input type="file" class="form-control" name="quizImage" accept="image/*" />
                </div>

                <!-- Question Builder Area -->
                <div id="questionBuilder">
                    <!-- Dynamic question blocks will be injected here -->
                </div>

                <button type="button" class="btn btn-outline-secondary mb-3" onclick="addQuestion()">+ Add Question</button>
            </div>

                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">Save Quiz</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addQuestion() {
            const container = document.getElementById("questionBuilder");
            const index = container.querySelectorAll('.question-block').length;
            const block = `
                        <div class="card question-block p-3 mb-3 shadow-sm">
                            <button type="button" class="btn-close position-absolute top-0 end-0 m-2" onclick="removeQuestion(this)" aria-label="Remove Question"></button>
                                 <input type="text" class="form-control mb-2" placeholder="Question text" name="Questions[${index}].Text" />
                            <div class="row g-2">
                                <div class="col-9">
                                    <input class="form-control mb-1" name="Questions[${index}].Options[0]" placeholder="Option 1" />
                                    <input class="form-control mb-1" name="Questions[${index}].Options[1]" placeholder="Option 2" />
                                    <input class="form-control mb-1" name="Questions[${index}].Options[2]" placeholder="Option 3" />
                                    <input class="form-control mb-1" name="Questions[${index}].Options[3]" placeholder="Option 4" />
                                </div>
                                <div class="col-3">
                                    <label class="form-label">Correct Answer</label>
                                        <select class="form-select" name="Questions[${index}].CorrectIndex">
                                        <option value="0">Option 1</option>
                                        <option value="1">Option 2</option>
                                        <option value="2">Option 3</option>
                                        <option value="3">Option 4</option>
                                    </select>
                                </div>
                            </div>
                        </div>`;
            document.getElementById("questionBuilder").insertAdjacentHTML("beforeend", block);
        }
        function removeQuestion(button) {
            const questionCard = button.closest('.question-block');
            if (questionCard) {
                questionCard.remove();
            }

            // Optional: renumber question indexes to keep name="Questions[0]" format in sync
            renumberQuestions();
        }

        function renumberQuestions() {
            const questionBlocks = document.querySelectorAll('.question-block');
            questionBlocks.forEach((block, i) => {
                block.querySelectorAll('input, select').forEach(input => {
                    // Update the name attributes (Questions[i].Text, Questions[i].Options[0], etc.)
                    input.name = input.name.replace(/Questions\[\d+\]/, `Questions[${i}]`);
                });
            });
        }

        document.querySelector('#addQuizModal form').addEventListener('submit', function (e) {
            const title = this.querySelector('[name="title"]').value.trim();
            const timer = this.querySelector('[name="timeLimit"]').value.trim();
            const image = this.querySelector('[name="quizImage"]').files.length;
            const questionBlocks = this.querySelectorAll('.question-block');

            if (!title) {
                alert("Quiz title is required.");
                e.preventDefault();
                return;
            }

            if (!image) {
                alert("Please upload a quiz banner image.");
                e.preventDefault();
                return;
            }

            if (!timer) {
                alert("Please provide the time of quiz.");
                e.preventDefault();
                return;
            }

            if (questionBlocks.length === 0) {
                alert("Please add at least one question.");
                e.preventDefault();
                return;
            }

            for (let i = 0; i < questionBlocks.length; i++) {
                const block = questionBlocks[i];
                const qText = block.querySelector(`[name^="Questions[${i}].Text"]`)?.value.trim();
                const options = block.querySelectorAll(`[name^="Questions[${i}].Options"]`);
                const correct = block.querySelector(`[name^="Questions[${i}].CorrectIndex"]`);

                console.log("Block:", block);
                console.log("QText:", qText);

                if (!qText) {
                    alert(`Question ${i + 1} must have text.`);
                    e.preventDefault();
                    return;
                }

                let filledOptions = 0;
                options.forEach(opt => { if (opt.value.trim()) filledOptions++; });

                if (filledOptions < 2) {
                    alert(`Question ${i + 1} must have at least 2 options.`);
                    e.preventDefault();
                    return;
                }

                if (!correct || correct.value === "") {
                    alert(`Please select a correct answer for Question ${i + 1}.`);
                    e.preventDefault();
                    return;
                }
            }
        });
    </script>
}

<style>
    .modal-body {
    max-height: 65vh; /* or 70vh depending on your layout */
    overflow-y: auto;
    overflow-x: hidden;
    }
</style>